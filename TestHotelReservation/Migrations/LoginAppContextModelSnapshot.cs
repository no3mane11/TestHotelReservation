// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestHotelReservation.Models;

#nullable disable

namespace TestHotelReservation.Migrations
{
    [DbContext(typeof(LoginAppContext))]
    partial class LoginAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestHotelReservation.Models.Chambre", b =>
                {
                    b.Property<int>("ChambreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChambreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChambreId"));

                    b.Property<bool?>("EstDisponible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ImageChambre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroChambre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TypeChambreId")
                        .HasColumnType("int")
                        .HasColumnName("TypeChambreID");

                    b.HasKey("ChambreId")
                        .HasName("PK__Chambre__59A3B1261F3055F7");

                    b.HasIndex("TypeChambreId");

                    b.HasIndex(new[] { "NumeroChambre" }, "UQ__Chambre__381617CB89A39476")
                        .IsUnique();

                    b.ToTable("Chambre", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateInscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ClientId")
                        .HasName("PK__Client__E67E1A043FC7F16A");

                    b.HasIndex(new[] { "Email" }, "UQ__Client__A9D105346FF020BB")
                        .IsUnique();

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Actif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateEmbauche")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Prenom")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__loginTab__3214EC27DF82FC53");

                    b.ToTable("Employe", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.HistoriqueExport", b =>
                {
                    b.Property<int>("ExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportId"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateExport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("TypeFichier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExportId")
                        .HasName("PK__Historiq__E5C997A4ECCECB51");

                    b.HasIndex("Id");

                    b.ToTable("HistoriqueExport", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("DateEnvoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("EstLu")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeUtilisateur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int")
                        .HasColumnName("UtilisateurID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32537E9CC6");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Paiement", b =>
                {
                    b.Property<int>("PaiementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaiementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaiementId"));

                    b.Property<DateTime>("DatePaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    b.HasKey("PaiementId")
                        .HasName("PK__Paiement__A8FB0857442DE033");

                    b.HasIndex("ReservationId");

                    b.ToTable("Paiement", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ChambreId")
                        .HasColumnType("int")
                        .HasColumnName("ChambreID");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("date");

                    b.Property<string>("EtatReservation")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('En attente')");

                    b.Property<decimal>("TarifParNuit")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F04B76ED26F");

                    b.HasIndex("ChambreId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.TabDeleted", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("date");

                    b.Property<string>("EtatReservation")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('En attente')");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F048508868F");

                    b.ToTable("tabDeleted", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.TypeChambre", b =>
                {
                    b.Property<int>("TypeChambreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeChambreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeChambreId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TarifParNuit")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("TypeChambreId")
                        .HasName("PK__TypeCham__DD784473F83ECA8F");

                    b.ToTable("TypeChambre", (string)null);
                });

            modelBuilder.Entity("TestHotelReservation.Models.Chambre", b =>
                {
                    b.HasOne("TestHotelReservation.Models.TypeChambre", "TypeChambre")
                        .WithMany("Chambres")
                        .HasForeignKey("TypeChambreId")
                        .IsRequired()
                        .HasConstraintName("FK__Chambre__TypeCha__4316F928");

                    b.Navigation("TypeChambre");
                });

            modelBuilder.Entity("TestHotelReservation.Models.HistoriqueExport", b =>
                {
                    b.HasOne("TestHotelReservation.Models.Employe", "IdNavigation")
                        .WithMany("HistoriqueExports")
                        .HasForeignKey("Id")
                        .IsRequired()
                        .HasConstraintName("FK__HistoriqueEx__ID__571DF1D5");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Paiement", b =>
                {
                    b.HasOne("TestHotelReservation.Models.Reservation", "Reservation")
                        .WithMany("Paiements")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK_Paiement_Reservation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Reservation", b =>
                {
                    b.HasOne("TestHotelReservation.Models.Chambre", "Chambre")
                        .WithMany("Reservations")
                        .HasForeignKey("ChambreId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Chamb__5DCAEF64");

                    b.HasOne("TestHotelReservation.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Clien__5CD6CB2B");

                    b.Navigation("Chambre");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Chambre", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Employe", b =>
                {
                    b.Navigation("HistoriqueExports");
                });

            modelBuilder.Entity("TestHotelReservation.Models.Reservation", b =>
                {
                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("TestHotelReservation.Models.TypeChambre", b =>
                {
                    b.Navigation("Chambres");
                });
#pragma warning restore 612, 618
        }
    }
}
